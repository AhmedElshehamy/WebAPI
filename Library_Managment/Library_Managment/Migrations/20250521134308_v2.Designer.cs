// <auto-generated />
using System;
using Library_Managment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_Managment.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250521134308_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library_Managment.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "sdnksla",
                            AccessFailedCount = 0,
                            AccountStatus = "ACTIVE",
                            ConcurrencyStamp = "d9a6fd47-ec9c-4c4a-b7ca-9a1f41de89b4",
                            CreatedOn = new DateTime(2025, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailConfirmed = false,
                            FirstName = "Ahmed",
                            LastName = "Ali",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEDzW8G+F7PzG5HpjKkTuZSe/4p3N+X9mULzH3LE57gGiFZxE+IvGu6UIdyyMv6n3Xg==",
                            PhoneNumber = "01212752875",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "65bc21cf-24fe-4346-9cf3-86a67749d0ba",
                            TwoFactorEnabled = false,
                            UserName = "A.Ali",
                            UserType = "ADMIN"
                        });
                });

            modelBuilder.Entity("Library_Managment.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Ordered")
                        .HasColumnType("bit");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookCategoryId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Thomas Corman",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 100f,
                            Title = "Introduction to Algorithm"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Thomas Corman",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 100f,
                            Title = "Introduction to Algorithm"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Robert Sedgewick & Kevin Wayne",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 200f,
                            Title = "Algorithms"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Steve Skiena",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 300f,
                            Title = "The Algorithm Design Manual"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Adnan Aziz",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 400f,
                            Title = "Algorithms For Interviews"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Adnan Aziz",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 400f,
                            Title = "Algorithms For Interviews"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Adnan Aziz",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 400f,
                            Title = "Algorithms For Interviews"
                        },
                        new
                        {
                            Id = 8,
                            Author = "George Heineman",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 500f,
                            Title = "Algorithm in Nutshell"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Algorithm Design",
                            BookCategoryId = 1,
                            Ordered = false,
                            Price = 600f,
                            Title = "Klienberg & Tardos"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Eric Matthes",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 700f,
                            Title = "Python Crash Course: A Hands-On, Project-Based Introduction to Programming"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Eric Matthes",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 700f,
                            Title = "Python Crash Course: A Hands-On, Project-Based Introduction to Programming"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Eric Matthes",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 700f,
                            Title = "Python Crash Course: A Hands-On, Project-Based Introduction to Programming"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Paul Barry",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 800f,
                            Title = "Head First Python: A Brain-Friendly Guide"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Joshua Bloch",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 900f,
                            Title = "Effective Java"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Joshua Bloch",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 900f,
                            Title = "Effective Java"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Kathy Sierra and Bert Bates",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1000f,
                            Title = "Head First Java"
                        },
                        new
                        {
                            Id = 17,
                            Author = "Brian W. Kernighan, Dennis M. Ritchie",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1100f,
                            Title = "C Programming Language"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Brian W. Kernighan, Dennis M. Ritchie",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1100f,
                            Title = "C Programming Language"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Brian W. Kernighan, Dennis M. Ritchie",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1100f,
                            Title = "C Programming Language"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Marijn Haverbeke",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1200f,
                            Title = "Eloquent JavaScript: A Modern Introduction to Programming"
                        },
                        new
                        {
                            Id = 21,
                            Author = "Donald E. Knuth",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1300f,
                            Title = "The Art of Computer Programming"
                        },
                        new
                        {
                            Id = 22,
                            Author = "Donald E. Knuth",
                            BookCategoryId = 2,
                            Ordered = false,
                            Price = 1300f,
                            Title = "The Art of Computer Programming"
                        },
                        new
                        {
                            Id = 23,
                            Author = "James F Kurose and Keith W Ross",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1400f,
                            Title = "A Top-Down Approach: Computer Networking"
                        },
                        new
                        {
                            Id = 24,
                            Author = "Rich Seifert and James Edwards",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1500f,
                            Title = "The All-New Switch Book (2nd Edition)"
                        },
                        new
                        {
                            Id = 25,
                            Author = "Rich Seifert and James Edwards",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1500f,
                            Title = "The All-New Switch Book (2nd Edition)"
                        },
                        new
                        {
                            Id = 26,
                            Author = "Jerry FitzGerald, Alan Dennis, and Alexandra Durcikova",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1600f,
                            Title = "Business Data Communications and Networking (14th Edition)"
                        },
                        new
                        {
                            Id = 27,
                            Author = "Forouzan",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1700f,
                            Title = "Data Communications and Networking with TCP/IP Protocol Suite, 6th Edition"
                        },
                        new
                        {
                            Id = 28,
                            Author = "Gary Donahue",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1800f,
                            Title = "Network Warrior, 2nd Edition"
                        },
                        new
                        {
                            Id = 29,
                            Author = "Gary Donahue",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1800f,
                            Title = "Network Warrior, 2nd Edition"
                        },
                        new
                        {
                            Id = 30,
                            Author = "Gary Donahue",
                            BookCategoryId = 3,
                            Ordered = false,
                            Price = 1800f,
                            Title = "Network Warrior, 2nd Edition"
                        },
                        new
                        {
                            Id = 31,
                            Author = "Ramesh Gaonkar",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 1900f,
                            Title = "Microprocessor Architecture, Programming, and Applications with the 8085 (4th Edition)"
                        },
                        new
                        {
                            Id = 32,
                            Author = "Douglas V. Hall",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 2000f,
                            Title = "Microprocessors and Interfacing: Programming and Hardware (Hardcover)"
                        },
                        new
                        {
                            Id = 33,
                            Author = "Douglas V. Hall",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 2000f,
                            Title = "Microprocessors and Interfacing: Programming and Hardware (Hardcover)"
                        },
                        new
                        {
                            Id = 34,
                            Author = "Kenneth L. Short",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 2100f,
                            Title = "Embedded Microprocessor Systems Design"
                        },
                        new
                        {
                            Id = 35,
                            Author = "Dr. Vibhav Kumar Sachan",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 2200f,
                            Title = "Digital Electronics & Microprocessor"
                        },
                        new
                        {
                            Id = 36,
                            Author = "Xiaocong Fan",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 2300f,
                            Title = "Real-Time Embedded Systems"
                        },
                        new
                        {
                            Id = 37,
                            Author = "Jonathan A. Dell",
                            BookCategoryId = 4,
                            Ordered = false,
                            Price = 2400f,
                            Title = "Digital Interface Design and Application"
                        },
                        new
                        {
                            Id = 38,
                            Author = "Shigley's Mechanical Engineering Design",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2500f,
                            Title = "Richard G. Budynas and Keith J. Nisbett"
                        },
                        new
                        {
                            Id = 39,
                            Author = "Shigley's Mechanical Engineering Design",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2500f,
                            Title = "Richard G. Budynas and Keith J. Nisbett"
                        },
                        new
                        {
                            Id = 40,
                            Author = "Shigley's Mechanical Engineering Design",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2500f,
                            Title = "Richard G. Budynas and Keith J. Nisbett"
                        },
                        new
                        {
                            Id = 41,
                            Author = "Erik Oberg",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2600f,
                            Title = "Machinery's Handbook"
                        },
                        new
                        {
                            Id = 42,
                            Author = "John J. Craig",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2700f,
                            Title = "Introduction to Robotics: Mechanics and Control"
                        },
                        new
                        {
                            Id = 43,
                            Author = "Robert L. Norton",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2800f,
                            Title = "Machine Design"
                        },
                        new
                        {
                            Id = 44,
                            Author = "Robert L. Norton",
                            BookCategoryId = 5,
                            Ordered = false,
                            Price = 2800f,
                            Title = "Machine Design"
                        },
                        new
                        {
                            Id = 45,
                            Author = "Frank M. White",
                            BookCategoryId = 6,
                            Ordered = false,
                            Price = 3000f,
                            Title = "Fluid Mechanics"
                        },
                        new
                        {
                            Id = 46,
                            Author = "Claus Borgnakke and Richard E. Sonntag",
                            BookCategoryId = 6,
                            Ordered = false,
                            Price = 3100f,
                            Title = "Fundamentals of Thermodynamics"
                        },
                        new
                        {
                            Id = 47,
                            Author = "Claus Borgnakke and Richard E. Sonntag",
                            BookCategoryId = 6,
                            Ordered = false,
                            Price = 3100f,
                            Title = "Fundamentals of Thermodynamics"
                        },
                        new
                        {
                            Id = 48,
                            Author = "James Stewart",
                            BookCategoryId = 7,
                            Ordered = false,
                            Price = 3200f,
                            Title = "Calculus: Early Transcendentals"
                        },
                        new
                        {
                            Id = 49,
                            Author = "Mark Ryan",
                            BookCategoryId = 7,
                            Ordered = false,
                            Price = 3300f,
                            Title = "Calculus for Dummies"
                        },
                        new
                        {
                            Id = 50,
                            Author = "Mark Ryan",
                            BookCategoryId = 7,
                            Ordered = false,
                            Price = 3300f,
                            Title = "Calculus for Dummies"
                        },
                        new
                        {
                            Id = 51,
                            Author = "Louis Leithold",
                            BookCategoryId = 7,
                            Ordered = false,
                            Price = 3400f,
                            Title = "The Calculus with Analytic Geometry"
                        },
                        new
                        {
                            Id = 52,
                            Author = "Euclid",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3500f,
                            Title = "Euclid's Elements"
                        },
                        new
                        {
                            Id = 53,
                            Author = "Robert Kanigel",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3600f,
                            Title = "The Man Who Knew Infinity: A Life of the Genius Ramanujan"
                        },
                        new
                        {
                            Id = 54,
                            Author = "Robert Kanigel",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3600f,
                            Title = "The Man Who Knew Infinity: A Life of the Genius Ramanujan"
                        },
                        new
                        {
                            Id = 55,
                            Author = "Stephen Hawking",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3700f,
                            Title = "A Brief History of Time"
                        },
                        new
                        {
                            Id = 56,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3800f,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 57,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3800f,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 58,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3800f,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 59,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3800f,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 60,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Price = 3800f,
                            Title = "Relativity: The Special and the General Theory"
                        });
                });

            modelBuilder.Entity("Library_Managment.Models.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "computer",
                            SubCategory = "algorithm"
                        },
                        new
                        {
                            Id = 2,
                            Category = "computer",
                            SubCategory = "programming languages"
                        },
                        new
                        {
                            Id = 3,
                            Category = "computer",
                            SubCategory = "networking"
                        },
                        new
                        {
                            Id = 4,
                            Category = "computer",
                            SubCategory = "hardware"
                        },
                        new
                        {
                            Id = 5,
                            Category = "mechanical",
                            SubCategory = "machine"
                        },
                        new
                        {
                            Id = 6,
                            Category = "mechanical",
                            SubCategory = "transfer of energy"
                        },
                        new
                        {
                            Id = 7,
                            Category = "mathematics",
                            SubCategory = "calculus"
                        },
                        new
                        {
                            Id = 8,
                            Category = "mathematics",
                            SubCategory = "algebra"
                        });
                });

            modelBuilder.Entity("Library_Managment.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("bookId")
                        .HasColumnType("int");

                    b.Property<int>("finePaid")
                        .HasColumnType("int");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("returned")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("returnedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.HasIndex("bookId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Library_Managment.Models.Book", b =>
                {
                    b.HasOne("Library_Managment.Models.BookCategory", "BookCategory")
                        .WithMany()
                        .HasForeignKey("BookCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookCategory");
                });

            modelBuilder.Entity("Library_Managment.Models.Order", b =>
                {
                    b.HasOne("Library_Managment.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_Managment.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("bookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Library_Managment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Library_Managment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_Managment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Library_Managment.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
